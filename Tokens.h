#ifndef TOKENS_H
#define TOKENS_H

#include <QString>

namespace Neb {

enum TokenType {
    ArrowAccent,
    At,
    Backslash,
    Bar,
    BarAccent,
    BigProduct,
    BigSum,
    Binomial,
    Cap,
    Cos,
    Cup,
    Caret,
    Cases,
    Comma,
    Colon,
    Conjunction,
    Dagger,
    DefEquals,
    Disjunction,
    Divide,
    Dollar,
    DotAccent,
    DotAccentDouble,
    DotAccentTriple,
    DotProduct,
    DoubleBar,
    DoubleDagger,
    DoubleExclam,
    Dualscript,
    EmptySet,
    Equals,
    Exclam,
    Exists,
    ForAll,
    Forwardslash,
    Fraction,
    Greater,
    GreaterEqual,
    Hash,
    Hat,
    Identifier,
    In,
    Infinity,
    Integer,
    Integral,
    LeftAngle,
    LeftArrow,
    LeftBrace,
    LeftBracket,
    LeftCeil,
    LeftDoubleAngle,
    LeftFloor,
    LeftParen,
    Less,
    LessEqual,
    MapsTo,
    Matrix,
    Minus,
    Multiply,
    Natural,
    Newline,
    Not,
    NotEqual,
    Number,
    Partial,
    Percent,
    Period,
    PlanckConst,
    Plus,
    Prime,
    Quaternion,
    Rational,
    Real,
    RightAngle,
    RightArrow,
    RightBrace,
    RightBracket,
    RightCeil,
    RightDoubleAngle,
    RightFloor,
    RightParen,
    Root,
    Semicolon,
    Sin,
    SpecialClose,
    SpecialEscape,
    SpecialOpen,
    Subscript,
    Superscript,
    Tick,
    Tilde,
    TildeAccent,
    Times,
    Transpose,
    UnderscriptedWord
};

struct Token {
    TokenType type;
    QString::size_type start;
    QString::size_type end;
};

}

#endif // TOKENS_H
