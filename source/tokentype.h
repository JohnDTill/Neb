//CODE-GEN FILE
//This file is generated from subfolder "meta".
//Changes to this file must be made in the meta project.

#include <QString>
#include <QHash>

enum TokenType {
	ArrowAccent,
	At,
	Backslash,
	Bar,
	BarAccent,
	BigProduct,
	BigSum,
	Binomial,
	Cap,
	Cos,
	Cup,
	Caret,
	Cases,
	Comma,
	Complex,
	Colon,
	Conjunction,
	Dagger,
	DefEquals,
	Disjunction,
	Divide,
	Dollar,
	DotAccent,
	DotAccentDouble,
	DotAccentTriple,
	DotProduct,
	DoubleBar,
	DoubleDagger,
	DoubleExclam,
	Dualscript,
	EmptySet,
	Equals,
	Exclam,
	Exists,
	ForAll,
	Forwardslash,
	Fraction,
	Greater,
	GreaterEqual,
	Hash,
	Hat,
	Identifier,
	In,
	Infimum,
	Infinity,
	Integer,
	Integral,
	LeftAngle,
	LeftArrow,
	LeftBrace,
	LeftBracket,
	LeftCeil,
	LeftDoubleAngle,
	LeftFloor,
	LeftParen,
	Less,
	LessEqual,
	Lim,
	MapsTo,
	Matrix,
	Max,
	Min,
	Minus,
	Multiply,
	Natural,
	Newline,
	Not,
	NotEqual,
	Number,
	Partial,
	Percent,
	Period,
	PlanckConst,
	Plus,
	Prime,
	Quaternion,
	Rational,
	Real,
	RightAngle,
	RightArrow,
	RightBrace,
	RightBracket,
	RightCeil,
	RightDoubleAngle,
	RightFloor,
	RightParen,
	Root,
	Semicolon,
	Sin,
	SpecialClose,
	SpecialEscape,
	SpecialOpen,
	Subscript,
	Superscript,
	Supremum,
	Tick,
	Tilde,
	TildeAccent,
	Times,
	Transpose,
	UnderscriptedWord,
	Boolean,
	Irrational,
	Sphere,
	Whole,
};

static const QHash<TokenType, QString> token_names {
	{ArrowAccent, "‚Åú‚Üí"},
	{At, "@"},
	{Backslash, "\\"},
	{Bar, "|"},
	{BarAccent, "‚ÅúƒÅ"},
	{BigProduct, "‚Åú‚àè"},
	{BigSum, "‚Åú‚àë"},
	{Binomial, "‚Åúb"},
	{Cap, "‚à©"},
	{Cos, "cos"},
	{Cup, "‚à™"},
	{Caret, "^"},
	{Cases, "‚Åúc"},
	{Comma, ","},
	{Complex, "‚ÑÇ "},
	{Colon, ":"},
	{Conjunction, "‚àß"},
	{Dagger, "‚Ä†"},
	{DefEquals, "‚âî"},
	{Disjunction, "‚à®"},
	{Divide, "√∑"},
	{Dollar, "$"},
	{DotAccent, "‚Åú»ß"},
	{DotAccentDouble, "‚Åú√§"},
	{DotAccentTriple, "‚Åú‚ãØ"},
	{DotProduct, "‚ãÖ"},
	{DoubleBar, "‚Äñ"},
	{DoubleDagger, "‚Ä°"},
	{DoubleExclam, "‚ÄºÔ∏è"},
	{Dualscript, "‚ÅúŒî"},
	{EmptySet, "‚àÖ"},
	{Equals, "="},
	{Exclam, "!"},
	{Exists, "‚àÉ"},
	{ForAll, "‚àÄ"},
	{Forwardslash, "/"},
	{Fraction, "‚Åúf"},
	{Greater, ">"},
	{GreaterEqual, "‚â•"},
	{Hash, "#"},
	{Hat, "‚Åú√¢"},
	{Identifier, "ID"},
	{In, "‚àà"},
	{Infimum, "inf"},
	{Infinity, "‚àû"},
	{Integer, "‚Ñ§"},
	{Integral, "‚Åú‚à´"},
	{LeftAngle, "‚ü®"},
	{LeftArrow, "‚Üê"},
	{LeftBrace, "["},
	{LeftBracket, "{"},
	{LeftCeil, "‚åà"},
	{LeftDoubleAngle, "‚ü™"},
	{LeftFloor, "‚åä"},
	{LeftParen, "("},
	{Less, "<"},
	{LessEqual, "‚â§"},
	{Lim, "lim"},
	{MapsTo, "‚Ü¶"},
	{Matrix, "‚Åú‚äû"},
	{Max, "max"},
	{Min, "min"},
	{Minus, "-"},
	{Multiply, "*"},
	{Natural, "‚Ñï"},
	{Newline, "\\n"},
	{Not, "¬¨"},
	{NotEqual, "‚â†"},
	{Number, "num"},
	{Partial, "‚àÇ"},
	{Percent, "%"},
	{Period, "."},
	{PlanckConst, "‚Ñé"},
	{Plus, "+"},
	{Prime, "‚Ñô"},
	{Quaternion, "‚Ñç"},
	{Rational, "‚Ñö"},
	{Real, "‚Ñù"},
	{RightAngle, "‚ü©"},
	{RightArrow, "‚Üí"},
	{RightBrace, "]"},
	{RightBracket, "}"},
	{RightCeil, "‚åâ"},
	{RightDoubleAngle, "‚ü´"},
	{RightFloor, "‚åã"},
	{RightParen, ")"},
	{Root, "‚Åú‚àö"},
	{Semicolon, ";"},
	{Sin, "sin"},
	{SpecialClose, "‚èµ"},
	{SpecialEscape, "‚Åú"},
	{SpecialOpen, "‚è¥"},
	{Subscript, "‚Åú_"},
	{Superscript, "‚Åú^"},
	{Supremum, "sup"},
	{Tick, "'"},
	{Tilde, "~"},
	{TildeAccent, "‚Åú√£"},
	{Times, "√ó"},
	{Transpose, "‚ä§"},
	{UnderscriptedWord, "‚Åúw"},
};

static const QHash<QString, TokenType> keywords {
	{"cos", Cos},
	{"inf", Infimum},
	{"lim", Lim},
	{"max", Max},
	{"min", Min},
	{"sin", Sin},
	{"sup", Supremum},
};

static const QHash<QString, TokenType> UTF32_map {
	{"ùîπ", Boolean},
	{"ùïÅ", Irrational},
	{"ùïä", Sphere},
	{"ùïé", Whole},
};

