//CODE-GEN FILE
//This file is generated from subfolder "meta".
//Changes to this file must be made in the meta project.

#ifndef NEB_NODETYPE_H
#define NEB_NODETYPE_H

#include <QString>
#include <QHash>

enum NodeType{
	ABS,
	ACCENT_ARROW,
	ACCENT_BAR,
	ACCENT_BREVE,
	ACCENT_DDDOT,
	ACCENT_DDOT,
	ACCENT_DOT,
	ACCENT_HAT,
	ACCENT_TILDE,
	ADDITION,
	ARGS,
	BACKSLASH,
	BINOMIAL,
	BOOLEANS,
	CALL,
	CASES,
	CEIL,
	COMPLEX_NUMS,
	CONDITIONAL_PROBABLITY,
	CONTOUR_INTEGRAL,
	CROSS,
	CURL,
	CURRENCY_DOLLARS,
	CURRENCY_EUROS,
	CURRENCY_POUNDS,
	DAGGER,
	DECREMENT,
	DEFINE_EQUALS,
	DERIVATIVE,
	DIVERGENCE,
	DIVIDE,
	DOT,
	CLOSED_SURFACE_INTEGRAL,
	DOUBLE_INTEGRAL,
	EMPTY_SET,
	EQUAL,
	ERROR,
	EVAL,
	EXPR_STMT,
	FACTORIAL,
	FLOOR,
	FORWARDSLASH,
	FRACTION,
	GRADIENT,
	GREATER,
	GREATER_EQUAL,
	GROUP_BRACKET,
	GROUP_PAREN,
	IDENTIFIER,
	IMPLICIT_MULTIPLY,
	IN,
	INCREMENT,
	INFIMUM,
	INFTY,
	INNER_PRODUCT,
	INTEGERS,
	INTEGRAL,
	INTERSECTION,
	LESS,
	LESS_EQUAL,
	LIMIT,
	LOGICAL_AND,
	LOGICAL_NOT,
	LOGICAL_OR,
	MATRIX,
	MAX,
	MIN,
	MINUS_PLUS_BINARY,
	MINUS_PLUS_UNARY,
	MODULUS,
	MULTIPLICATION,
	NARY_INTERSECTION,
	NARY_UNION,
	NARY_UNIONPLUS,
	NATURALS,
	NEGATIVE_RATIONALS,
	NEGATIVE_REALS,
	NORM,
	NOT_EQUAL,
	NOT_IN,
	NUMBER,
	ODOT,
	OUTER_PRODUCT,
	PARTIAL,
	PLUS_MINUS_BINARY,
	PLUS_MINUS_UNARY,
	POSITIVE_RATIONALS,
	POSITIVE_REALS,
	POWER,
	PRODUCT,
	PROPORTIONAL,
	QUATERNIONS,
	INTERVAL_INTEGER,
	INTERVAL_CLOSE_CLOSE,
	INTERVAL_CLOSE_OPEN,
	INTERVAL_OPEN_CLOSE,
	INTERVAL_OPEN_OPEN,
	RATIONALS,
	REALS,
	ROOT,
	SET_BUILDER,
	SET_ENUMERATED,
	SET_LITERAL_DIMENSIONS,
	SEQUENCE_ENUMERATED,
	SQRT,
	SUBSCRIPT_ACCESS,
	SUBSCRIPT_PARTIAL,
	SUBTRACTION,
	SUMMATION,
	SUPREMUM,
	TICK_DERIVATIVE,
	TRANSPOSE,
	CLOSED_VOLUME_INTEGRAL,
	TRIPLE_INTEGRAL,
	UNARY_MINUS,
	UNION,
	VEE,
	WEDGE,
};

#ifndef Neb_NDebug
static const QHash<NodeType, QString> labels {
	{ABS, "| |"},
	{ACCENT_ARROW, "‚Åú‚Üí"},
	{ACCENT_BAR, "‚ÅúƒÅ"},
	{ACCENT_BREVE, "‚ÅúƒÉ"},
	{ACCENT_DDDOT, "‚Åú‚ãØ"},
	{ACCENT_DDOT, "‚Åú√§"},
	{ACCENT_DOT, "‚Åú»ß"},
	{ACCENT_HAT, "‚Åú√¢"},
	{ACCENT_TILDE, "‚Åú√£"},
	{ADDITION, "+"},
	{ARGS, "args"},
	{BACKSLASH, "\\\\"},
	{BINOMIAL, "‚Åúb"},
	{BOOLEANS, "ùîπ"},
	{CALL, "f( )"},
	{CASES, "‚Åúc"},
	{CEIL, "‚åà ‚åâ"},
	{COMPLEX_NUMS, "‚ÑÇ "},
	{CONDITIONAL_PROBABLITY, "P( | )"},
	{CONTOUR_INTEGRAL, "‚àÆ"},
	{CROSS, "√ó"},
	{CURL, "‚àá√ó"},
	{CURRENCY_DOLLARS, "$"},
	{CURRENCY_EUROS, "‚Ç¨"},
	{CURRENCY_POUNDS, "¬£"},
	{DAGGER, "‚Ä†"},
	{DECREMENT, "x‚Åª"},
	{DEFINE_EQUALS, "‚âî"},
	{DERIVATIVE, "‚ÖÜy/‚ÖÜx"},
	{DIVERGENCE, "‚àá‚ãÖ"},
	{DIVIDE, "√∑"},
	{DOT, "‚ãÖ"},
	{CLOSED_SURFACE_INTEGRAL, "‚àØ"},
	{DOUBLE_INTEGRAL, "‚à¨"},
	{EMPTY_SET, "‚àÖ"},
	{EQUAL, "="},
	{ERROR, "err"},
	{EVAL, "‚Åú_|"},
	{EXPR_STMT, "expr\\nstmt"},
	{FACTORIAL, "!"},
	{FLOOR, "‚åä ‚åã"},
	{FORWARDSLASH, "/"},
	{FRACTION, "‚Åúf"},
	{GRADIENT, "‚àá "},
	{GREATER, ">"},
	{GREATER_EQUAL, "‚â•"},
	{GROUP_BRACKET, "[ ]"},
	{GROUP_PAREN, "( )"},
	{IDENTIFIER, "id: "},
	{IMPLICIT_MULTIPLY, "*imp"},
	{IN, "‚àà"},
	{INCREMENT, "x‚Å∫"},
	{INFIMUM, "inf"},
	{INFTY, "‚àû"},
	{INNER_PRODUCT, "‚ü® | ‚ü©"},
	{INTEGERS, "‚Ñ§"},
	{INTEGRAL, "‚à´"},
	{INTERSECTION, "‚à©"},
	{LESS, "<"},
	{LESS_EQUAL, "‚â§"},
	{LIMIT, "lim"},
	{LOGICAL_AND, "‚àß"},
	{LOGICAL_NOT, "¬¨"},
	{LOGICAL_OR, "‚à®"},
	{MATRIX, "‚Åú‚äû"},
	{MAX, "max"},
	{MIN, "min"},
	{MINUS_PLUS_BINARY, "‚àì"},
	{MINUS_PLUS_UNARY, "‚àì"},
	{MODULUS, "%"},
	{MULTIPLICATION, "*"},
	{NARY_INTERSECTION, "‚Åú‚ãÇ"},
	{NARY_UNION, "‚Åú‚ãÉ"},
	{NARY_UNIONPLUS, "‚Åú‚®Ñ"},
	{NATURALS, "‚Ñï"},
	{NEGATIVE_RATIONALS, "‚Ñö‚Åª"},
	{NEGATIVE_REALS, "‚Ñù‚Åª"},
	{NORM, "‚Äñ ‚Äñ"},
	{NOT_EQUAL, "‚â†"},
	{NOT_IN, "‚àâ"},
	{NUMBER, ""},
	{ODOT, "‚®Ä"},
	{OUTER_PRODUCT, "‚äó"},
	{PARTIAL, "‚àÇy/‚àÇx"},
	{PLUS_MINUS_BINARY, "¬±"},
	{PLUS_MINUS_UNARY, "¬±"},
	{POSITIVE_RATIONALS, "‚Ñö‚Å∫"},
	{POSITIVE_REALS, "‚Ñù‚Å∫"},
	{POWER, "^"},
	{PRODUCT, "‚àè"},
	{PROPORTIONAL, "‚àù"},
	{QUATERNIONS, "‚Ñç"},
	{INTERVAL_INTEGER, "‚ü¶,‚üß"},
	{INTERVAL_CLOSE_CLOSE, "[,]"},
	{INTERVAL_CLOSE_OPEN, "[,)"},
	{INTERVAL_OPEN_CLOSE, "(,]"},
	{INTERVAL_OPEN_OPEN, "(,)"},
	{RATIONALS, "‚Ñö"},
	{REALS, "‚Ñù"},
	{ROOT, "‚Åú‚àõ"},
	{SET_BUILDER, "{ | }"},
	{SET_ENUMERATED, "{,,,}"},
	{SET_LITERAL_DIMENSIONS, "dim"},
	{SEQUENCE_ENUMERATED, "(,,,)"},
	{SQRT, "‚Åú‚àö"},
	{SUBSCRIPT_ACCESS, "x·µ¢"},
	{SUBSCRIPT_PARTIAL, "‚àÇ"},
	{SUBTRACTION, "-"},
	{SUMMATION, "Œ£"},
	{SUPREMUM, "sup"},
	{TICK_DERIVATIVE, "'"},
	{TRANSPOSE, "‚ä§"},
	{CLOSED_VOLUME_INTEGRAL, "‚à∞"},
	{TRIPLE_INTEGRAL, "‚à≠"},
	{UNARY_MINUS, "-"},
	{UNION, "‚à™"},
	{VEE, "‚à®"},
	{WEDGE, "‚àß"},
};
#endif

#define NEB_NUM_NODETYPES 118

#endif
